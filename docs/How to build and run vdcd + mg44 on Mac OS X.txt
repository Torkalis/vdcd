# Prepare
# =======

# install XCode 5.x: https://developer.apple.com/xcode/
# install (home)brew: http://brew.sh

# install needed packages from brew
brew install json-c
brew install protobuf-c
brew install boost

# create a project directory
mkdir <project dir of your choice>
cd <project dir of your choice>

# clone the git repositories
# - substitute your git user name for <username>, enter password when asked
git clone -b luz ssh://<username>@plan44.ch/home/plan44/sharedgit/mongoose44.git libmongoose
git clone -b luz ssh://<username>@plan44.ch/home/plan44/sharedgit/mg44.git mg44
git clone -b luz ssh://<username>@plan44.ch/home/plan44/sharedgit/vdcd.git vdcd

# Build
# =====

# open the mg44.xcodeproj and build it (cmd-B)
# then close the project (cmd-alt-W)

# open the vdcd.xcodeproj and build it (cmd-B)

# re-open the mg44.xcodeproj


# configure the arguments of both projects in XCode (Product->Scheme->Edit Scheme..., under "Run" -> "Arguments"

# mg44 webserver command line should be:
mg44 -listening_ports 8080 -jsonapi_path /api/json/ -jsonapi_host localhost -jsonapi_port 8090

# vdcd command line should be:
vdcd --cfgapiport 8090 --enocean <ip_of_enocean_gateway>:<portno> -l 7


# Run
# ===

# run both mg44 and vdcd from Xcode (or the command line)

# send API request to http:://localhost:8080 to issue API requests, e.g.

# - list of all device classes
http://localhost:8080/api/json/vdc?method=getProperty&name=x-p44-vdcs&dSUID=root

# - list of all devices of a class
http://localhost:8080/api/json/vdc?method=getProperty&name=x-p44-devices&dSUID=<device class dSUID>

# - list of all properties of a device
http://localhost:8080/api/json/vdc?method=getProperty&name=*&dSUID=<device dSUID>

# - set vdcd to enOcean learn mode for max 30 seconds:
http://localhost:8080/api/json/p44?method=learn&seconds=30
#   will return timeout, true (=learned device) or false (=unlearned device)






