package vdcapi;


enum ValueType {
    NULL_VALUE = 1;

    BOOL_VALUE = 2;
    INT64_VALUE = 3;
    UINT64_VALUE = 4;
    DOUBLE_VALUE = 5;
    STRING_VALUE = 6;
    BYTES_VALUE = 7;

    STRUCT_VALUE = 8;
}


message PropertyValue {
    required ValueType type = 1 [ default = NULL_VALUE ];
    // kind of a union
    optional bool boolval = 2;
    optional uint64 uintval = 3;
    optional int64 intval = 4;
    optional double doubleval = 5;
    optional string strval = 6;
    optional bytes bytesval = 7;
    // in case property is in fact a "struct" with subproperties
    repeated SubProperty structval = 8;
}
 
 
message SubProperty {
    required string name = 1;
    required PropertyValue value = 2;
}





message vdsm_RequestHello {
    optional string dSUID = 1;
    optional uint32 apiVersion = 2;
    optional string pushUri = 3;
}

message vdc_ResponseHello {
    optional string dSUID = 1;
    optional bool allow_disconnect = 2 [ default = false ];
}


message vdsm_RequestGetProperty {
    optional string dSUID = 1;
    optional string name = 2;
    optional uint32 index = 3;
    optional uint32 offset = 4;
    optional uint32 count = 5 [ default = 1 ];
}

message vdc_ResponseGetProperty {
    // TODO: check with team
    repeated PropertyValue value = 1;
}



message vdc_SendAnnounce {
    optional string dSUID = 1;
}

message vdsm_SendBye {
}

message vdsm_SendRemove {
    optional string dSUID = 1;
}

message vdsm_SendSetProperty {
    optional string dSUID = 1;
    optional string name = 2;
    optional uint32 index = 3;
    optional uint32 offset = 4;
    optional uint32 count = 5 [ default = 1 ];
    // TODO: value - check with team
    optional PropertyValue value = 6;
}


message vdsm_NotificationCallScene {
    optional string dSUID = 1;
    optional int32 scene = 2;
    optional bool force = 3;
    optional int32 group = 4;
    optional int32 zoneID = 5;
}

message vdsm_NotificationSaveScene {
    optional string dSUID = 1;
    optional int32 scene = 2;
    optional int32 group = 3;
    optional int32 zoneID = 4;
}


message vdsm_NotificationUndoScene {
    optional string dSUID = 1;
    optional int32 scene = 2;
    optional int32 group = 3;
    optional int32 zoneID = 4;
}

message vdsm_NotificationSetLocalPrio {
    optional string dSUID = 1;
    optional int32 scene = 2;
    optional int32 group = 3;
    optional int32 zoneID = 4;
}

message vdsm_NotificationCallMinScene {
    optional string dSUID = 1;
    optional int32 group = 2;
    optional int32 zoneID = 3;
}

message vdsm_NotificationSetControlValue {
    optional string dSUID = 1;
    optional int32 value = 2;
    optional int32 group = 3;
    optional int32 zoneID = 4;
}


message vdsm_NotificationIdentify {
    optional string dSUID = 1;
    optional int32 group = 2;
    optional int32 zoneID = 3;
}

message vdsm_NotificationPing {
    optional string dSUID = 1;
}


message vdc_NotificationVanish {
    optional string dSUID = 1;
}


message vdc_NotificationPong {
    optional string dSUID = 1;
}


message vdc_NotificationPushProperty {
    optional string dSUID = 1;
    optional string name = 2;
    optional uint32 index = 3;
    // TODO: value
    optional PropertyValue value = 4;
}
